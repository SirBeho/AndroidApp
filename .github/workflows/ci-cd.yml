name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - dev

jobs:
  quarkus-api:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Set up Maven
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build Quarkus Docker image
        run: |
          cd Quarkus
          chmod +x mvnw
          npm run docker-build  #docker build -t quarkus-api .
        
          - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-east-1

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 637423234931.dkr.ecr.us-east-1.amazonaws.com
      
      - name: Push Quarkus Docker image to ECR
        run: |
          docker tag quarkus-api:latest 637423234931.dkr.ecr.us-east-1.amazonaws.com/quarkus-api:latest
          docker push 637423234931.dkr.ecr.us-east-1.amazonaws.com/quarkus-api:latest       

      - name: Update ECS service for Quarkus API
        run: |
          aws ecs update-service --cluster quarkus-api-cluster --service quarkus-api-service --force-new-deployment --region us-east-1

  vertx-api:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Build Vert.x Docker image
        run: |
          cd Vertex
          npm run docker-build  # docker build -t vertx-api .
      
          - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-east-1

      - name: Login to Amazon ECR
        run: |
           aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 637423234931.dkr.ecr.us-east-1.amazonaws.com

      - name: Push Vert.x Docker image to ECR
        run: |
          docker tag vertx-api:latest 637423234931.dkr.ecr.us-east-1.amazonaws.com/vertx-api:latest
          docker push 637423234931.dkr.ecr.us-east-1.amazonaws.com/vertx-api:latest
          
      - name: Update ECS service for Vert.x API
        run: |
          aws ecs update-service --cluster vertx-api-cluster --service vertx-api-service --force-new-deployment --region <your-region>    

  nativescrip-app:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Android Build Tools and SDK
        run: |
          sudo apt-get update
          sudo apt-get install -y wget tar unzip
          wget https://dl.google.com/android/repository/commandlinetools-linux-8092744_latest.zip
          mkdir -p $HOME/android-sdk
          unzip commandlinetools-linux-8092744_latest.zip -d $HOME/android-sdk/cmdline-tools
          mv $HOME/android-sdk/cmdline-tools/cmdline-tools $HOME/android-sdk/cmdline-tools/tools
          export ANDROID_HOME=$HOME/android-sdk
          export PATH=$ANDROID_HOME/cmdline-tools/tools/bin:$ANDROID_HOME/platform-tools:$PATH
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "platforms;android-30" "build-tools;30.0.3"
        
      - name: Ensure ANDROID_SDK_ROOT is unset
        run: unset ANDROID_SDK_ROOT
        
      - name: Install NativeScript CLI
        run: npm install -g nativescript

      
      - name: Build APK
        run: |
          export ANDROID_HOME=$HOME/android-sdk
          export ANDROID_SDK_ROOT=$ANDROID_HOME  # Forzar que ambas variables apunten al mismo lugar
          export PATH=$ANDROID_HOME/cmdline-tools/tools/bin:$ANDROID_HOME/platform-tools:$PATH
          cd NativeScript
          ns build android --no-uglify  # O usa  --release si es necesario


