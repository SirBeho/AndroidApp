name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - master
      
  push:
    branches:
      - master

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

jobs:
  quarkus-api:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.check.outputs.result }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Set up Maven
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build Quarkus Docker image
        run: |
          cd Quarkus
          chmod +x mvnw
          npm run docker-build  #docker build -t quarkus-api .
      
      - name: Configure AWS credentials
        if: github.event_name == 'push'
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::637423234931:role/AWS-Permisos
          aws-region: us-east-1

      - name: Login to Amazon ECR
        if: github.event_name == 'push'
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 637423234931.dkr.ecr.us-east-1.amazonaws.com
      
      - name: Push Quarkus Docker image to ECR
        if: github.event_name == 'push'
        run: |
          docker tag quarkus-api:latest 637423234931.dkr.ecr.us-east-1.amazonaws.com/quarkus-api:latest
          docker push 637423234931.dkr.ecr.us-east-1.amazonaws.com/quarkus-api:latest       

      - name: Update ECS service for Quarkus API
        id: check  
        if: github.event_name == 'push'
        run: |
          aws ecs update-service --cluster quarkus-api-cluster --service quarkus-api-service --force-new-deployment --region us-east-1

  vertx-api:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.check.outputs.result }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Build Vert.x Docker image
        run: |
          cd Vertex
          npm run docker-build  # docker build -t vertx-api .

      - name: Configure AWS credentials
        if: github.event_name == 'push'
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::637423234931:role/AWS-Permisos
          aws-region: us-east-1

      - name: Login to Amazon ECR
        if: github.event_name == 'push'
        run: |
           aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 637423234931.dkr.ecr.us-east-1.amazonaws.com

      - name: Push Vert.x Docker image to ECR
        if: github.event_name == 'push'
        run: |
          docker tag vertx-api:latest 637423234931.dkr.ecr.us-east-1.amazonaws.com/vertx-api:latest
          docker push 637423234931.dkr.ecr.us-east-1.amazonaws.com/vertx-api:latest
          
      - name: Update ECS service for Vert.x API
        id: check
        if: github.event_name == 'push'
        run: |
          aws ecs update-service --cluster vertx-api-cluster --service vertx-api-service --force-new-deployment --region us-east-1 

  nativescrip-app:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v2

      - name: Configurar Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Configurar Java
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cachear dependencias NPM
        uses: actions/cache@v3
        with:
          path: |
            nativescript/node_modules
          key: ${{ runner.os }}-npm-cache-${{ hashFiles('nativescript/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-cache-

      - name: Instalar dependencias
        run: |
          cd NativeScript
          npm install -g nativescript

      - name: Configurar SDK de Android
        uses: android-actions/setup-android@v2
        with:
          api-levels: '30'
          build-tools: '30.0.3'

      - name: Cachear SDK de Android
        uses: actions/cache@v3
        with:
          path: ${{ env.ANDROID_SDK_ROOT }}
          key: ${{ runner.os }}-android-sdk
          restore-keys: |
            ${{ runner.os }}-android-sdk

      - name: Compilar la aplicaci√≥n
        run: |
          cd NativeScript
          npx tns build android
       
          
    
  nativescrip-app-request:
    runs-on: ubuntu-latest
    needs: [quarkus-api, vertx-api, nativescrip-app] 
    if: github.event_name == 'push' 
    env:
      QuarkusUrl: "http://main-829069404.us-east-1.elb.amazonaws.com"
      VertxUrl: "http://main-829069404.us-east-1.elb.amazonaws.com/vertx/"
    steps:   
      - name: Checkout repository
        uses: actions/checkout@v2   

      - name: Validate connection to Quarkus API
        run: |
          response=$(curl --write-out "%{http_code}" --silent --output /dev/null ${QuarkusUrl}/hello)
          if [ "$response" != "200" ]; then
            echo "Quarkus API not reachable. HTTP Status: $response"
            exit 1
          else
            echo "Quarkus API is reachable"
          fi

      - name: Validate connection to Vert.x API
        run: |
          response=$(curl --write-out "%{http_code}" --silent --output /dev/null ${VertxUrl}/hello)
          if [ "$response" != "200" ]; then
            echo "Vert.x API not reachable. HTTP Status: $response"
            exit 1
          else
            echo "Vert.x API is reachable"
          fi
     


